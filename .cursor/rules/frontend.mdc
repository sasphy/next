---
description: 
globs: 
alwaysApply: true
---
# Next.js 15.x (≤ 15.3.1) & React 19.x (≤ 19.1) — Developer‑Centric Reference (May 2025)

## Why this document?

Condensed, **no‑fluff** notes for engineers and LLMs.
Everything below is:

* **Actionable:** only items that affect application code, build, config, or debugging.
* **Current:** covers the 15.3.1 patch of Next.js and React 19.1.
* **Citable:** every bullet ends with a citation.

---

## 1 React 19.x (highlights & breaking changes)

### 1.1 New primitives

| API / Feature                             | Purpose                                                                             | Quick sample                                                                                                                                    |
| ----------------------------------------- | ----------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |
| **Actions + async `startTransition`**     | Native pending/error/optimistic handling (client & server).                         | `startTransition(async () => await updateTask(data));` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))         |
| **`useActionState`**                      | Wrap an action and expose `[data, act, isPending]`.                                 | `const [err, submit, pending] = useActionState(action, null);` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com)) |
| **`useOptimistic`**                       | Local optimistic value until Action settles.                                        | `const [items, set] = useOptimistic(init);` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))                    |
| **`use` (resource read)**                 | Suspend on *Promise/Context* in render.                                             | `const data = use(fetchUser(id));` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))                             |
| **View Transitions (`<ViewTransition>`)** | Declarative page/element animations, incl. shared‑element & type‑based transitions. | `<ViewTransition name="card" share={{ nav:'slide' }}>` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))         |
| **Activity (`<Activity>`)**               | Hide/unmount while preserving state & prerender hidden UIs.                         | `<Activity mode={visible?'visible':'hidden'}>` ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))                 |

### 1.2 DX & platform hooks

* **Document metadata tags** (`<title>`, `<meta>`, `<link>`  in any component) auto‑hoisted to `<head>`; SSR‑safe. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))
* **Stylesheet orchestration** via `<link rel="stylesheet" precedence="high">` and `<style>`. React manages order & suspense‑aware loading. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))
* **Async scripts**—deduplicated `<script async>` anywhere in tree. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))
* **Resource preloading helpers**: `import {preload, preinit, prefetchDNS, preconnect} from 'react-dom'`. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))
* **Improved error hooks** `onCaughtError`, `onUncaughtError`, `onRecoverableError`. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))
* **Full Custom‑Element property support**—non‑primitive props become DOM properties on the client, omitted on SSR. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))

### 1.3 Breaking & deprecations

| Change                                                                                                                                                                                  | Action |
| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------ |
| **`forwardRef` optional** – function components accept `ref` prop directly. Run codemod. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))               |        |
| **Cleanup function in ref callbacks** – return function instead of relying on `null`. Adjust TS types. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com)) |        |
| **`<Context.Provider>` → `<Context>`** – codemod available. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))                                            |        |
| **Hydration mismatch logs consolidated** – no code change, but easier debugging. ([react.dev](https://react.dev/blog/2024/12/05/react-19?utm_source=chatgpt.com))                       |        |

### 1.4 React 19.1 (2025‑03‑28)

* **Owner Stack dev‑tool** – see full hook/component stack for a thrown error. ([wisp.blog](https://www.wisp.blog/blog/react-191-is-out-heres-what-you-need-to-know?utm_source=chatgpt.com))
* **Suspense trace view** – browser devtools panel shows which promises blocked paint. ([wisp.blog](https://www.wisp.blog/blog/react-191-is-out-heres-what-you-need-to-know?utm_source=chatgpt.com))
* **RSC inspector** – highlights server vs client components in React‑DevTools v5. ([wisp.blog](https://www.wisp.blog/blog/react-191-is-out-heres-what-you-need-to-know?utm_source=chatgpt.com))

---

## 2 Next.js 15.x (through 15.3.1)

### 2.1 Core breaking changes

| Area                                                                                                                | What changed                                                                                                  | Required migration                                                                                                                                           |
| ------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| **Async Request APIs** (`headers()`, `cookies()`, `draftMode()`, route `params`, `searchParams`) are now **async**. | Wrap calls in `await` or convert to loaders.                                                                  | Run `next-async-request-api` codemod. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))                                               |
| **Caching defaults**                                                                                                | GET Route Handlers & client router cache are **uncached by default**.                                         | Add `dynamic: 'force-static'` or `staleTimes` config to restore previous behaviour. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com)) |
| **Removed** `squoosh` image backend; `sharp` suggested.                                                             | Add `sharp` to deps if self‑hosting. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com)) |                                                                                                                                                              |

### 2.2 New features (15.0 → 15.3)

* **React 19 alignment** – App Router ships on React 19 RC/stable. Pages Router may stay on React 18 for gradual upgrade. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))
* **Turbopack**

  * `next dev --turbo` **stable**; `next build --turbo` **alpha**; linear speed‑up with CPU cores. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))
  * Config moved from `experimental.turbo` to top‑level `turbopack` key. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))
* **Rspack community adapter** – opt‑in replacement bundler for near‑webpack parity. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))
* **Static Route Indicator** in dev overlay shows ISR/static/dynamic status. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))
* **New `<Form>`** (from `next/form`) – automatic prefetch, client navigation, progressive enhancement.   \`\`\`tsx
  import Form from 'next/form';

<Form action="/search"><input name="q" /></Form>``` ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))  
* **Navigation hooks**  
  * `onNavigate` prop on `<Link>` – intercept/cancel SPA nav.  
  * `useLinkStatus()` – local loading states → skeleton buttons. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))  
* **Instrumentation**  
  * `instrumentation.js` **stable**; `instrumentation-client.js` new – runs before app code for analytics. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))  
  * `onRequestError(err, req, ctx)` server hook for unified error capture. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))  
* **`unstable_after()`** – schedule work after streaming response completes; enable in `experimental.after`. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))  
* **Security** – Server Action IDs are unguessable; unused actions tree‑shaken. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))  

### 2.3 Tooling & language

* **TypeScript plugin LSP** – \~60 % faster large‑repo responses; no freezes. ([medium.com](https://medium.com/%40onix_react/whats-new-in-next-js-15-3-84bd81e23b05?utm_source=chatgpt.com))
* **ESLint 9** supported; Next auto‑applies `ESLINT_USE_FLAT_CONFIG=false` for legacy configs. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))
* **`next.config.ts`** – typed via `NextConfig`, TS‑native. ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))
* **Bundling options**

  * App & Pages routers: `serverExternalPackages` (opt‑out) / `bundlePagesRouterDependencies` (opt‑in). ([nextjs.org](https://nextjs.org/blog/next-15-3?utm_source=chatgpt.com))

### 2.4 15.3.1 Patch

* Bug‑fix release (npm `next@15.3.1`); upgrades Turbopack dev & build to v0.1.8 and patches client router cache regression.  `npm i next@latest`. ([npmjs.com](https://www.npmjs.com/package/next/v/15.3.1-canary.13?utm_source=chatgpt.com))

---

## 3 Migration checklist

```shell
# React
npx react-codemod ref-prop .
npx react-codemod context-as-provider .
npm i react@19.1 react-dom@19.1

# Next.js
npx @next/codemod@canary upgrade latest          # umbrella CLI
npx @next/codemod@canary next-async-request-api .
npm i next@15.3.1
```

1. Replace any synchronous `headers()/cookies()/params` with `await`.
2. Review custom image loaders → switch to `sharp`.
3. For GET Route Handlers you still want cached, add:

```ts
export const dynamic = 'force-static'
```

4. Migrate `<form>` elements that should stay on current page to `<Form>` only if they navigate.
5. Enable Turbopack dev for large monorepos:

```json
// package.json scripts
"dev": "next dev --turbo",
"build": "next build --turbo"   # alpha – validate first
```

---

## 4 Cheat‑sheet: Config keys

| key                             | since | type      | notes                                  |
| ------------------------------- | ----- | --------- | -------------------------------------- |
| `turbopack`                     | 15.3  | object    | `rules`, `ecmaScriptTarget`, `css`.    |
| `experimental.after`            | 15.0  | boolean   | Enables `unstable_after`.              |
| `staleTimes.{static,dynamic}`   | 15.0  | seconds   | Router cache tuning.                   |
| `bundlePagesRouterDependencies` | 15.0  | boolean   | Auto‑bundle externals in Pages Router. |
| `serverExternalPackages`        | 15.0  | string\[] | Opt‑out packages from bundling.        |

---