'use client';

import { createContext, useContext, ReactNode } from 'react';
import useConvexAuth from '@/hooks/use-convex-auth';
import { Id } from '@/_generated/dataModel';

// Define the context type
interface ConvexAuthContextType {
  userId: Id<'users'> | null;
  isLoading: boolean;
  isAuthenticated: boolean;
  user: any; // Using any here as the actual user type is generated by Convex
}

// Create the context with default values
const ConvexAuthContext = createContext<ConvexAuthContextType>({
  userId: null,
  isLoading: true,
  isAuthenticated: false,
  user: null,
});

// Create a provider component
export function ConvexAuthProvider({ children }: { children: ReactNode }) {
  // Use the auth hook
  const auth = useConvexAuth();
  
  return (
    <ConvexAuthContext.Provider value={auth}>
      {children}
    </ConvexAuthContext.Provider>
  );
}

// Create a hook to use the context
export const useConvexAuthContext = () => useContext(ConvexAuthContext);

export default ConvexAuthProvider; 